#echo hello world # dummy for read

# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

## read
assert_fake_eval '
  a=read
  "$a" aaa bbb ccc < '"$SCRIPT_NAME"'
  echo "aaa=$aaa, bbb=$bbb, ccc=$ccc"
' 'aaa=#echo, bbb=hello, ccc=world # dummy for read'

assert_fake_eval '
  a=read
  AAA=111
  ff() { local AAA; read AAA; echo "local: $AAA"; }
  echo "global1: $AAA"
  ff < '"$SCRIPT_NAME"'
  echo "global2: $AAA"
' 'global1: 111
local: #echo hello world # dummy for read
global2: 111'

assert_fake_eval '
  ff() { local REPLY; read; echo "local=<$REPLY>";  }
  echo "1<$REPLY>"
  ff < '"$SCRIPT_NAME"'
  echo "2<$REPLY>"
' '1<>
local=<#echo hello world # dummy for read>
2<>'

## printf
assert_fake_eval '
    printf -v var "<%s>+" 1 2 3
    echo "$var"
' '<1>+<2>+<3>+'

assert_fake_eval '
  p=printf
  ff() { "$p" -v AAA "hello"; echo "$AAA"; local AAA; "$p" -v AAA "world"; echo "$AAA"; }
  echo "global1: $AAA"
  ff
  echo "global2: $AAA"
' 'global1: 
hello
world
global2: hello'

## builtin
assert "$(fake_eval 'builtin ls' 2>&1)" == 'bash: builtin: ls: not a shell builtin command'
assert $? == 1

assert "$(fake_eval 'll() echo hello; builtin ll' 2>&1)" == 'bash: builtin: ll: not a shell builtin command'
assert $? == 1

assert "$(fake_eval 'builtin __shtx_read' 2>&1)" == 'bash: builtin: __shtx_read: not a shell builtin command'
assert $? == 1

assert_fake_eval '
  builtin printf "<%s>\n" a b c
  builtin builtin echo hello
  builtin command -v echo
' '<a>
<b>
<c>
hello
echo'

# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0