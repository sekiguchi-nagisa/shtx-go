# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

# expansion op
## normal variable
assert_fake_eval '  # ${parameter:-word}
    foo=asdf
    echo "${foo:-bar}xyz}"
    foo=
    echo "${foo:-bar}xyz}"
    unset foo
    echo "${foo:-bar}xyz}"
' 'asdfxyz}
barxyz}
barxyz}'

assert_fake_eval '  # ${parameter-word}
    export foo=asdf
    echo "${foo-bar}xyz}"
    foo=
    echo "${foo-bar}xyz}"
    unset foo
    echo "${foo-bar}xyz}"
' 'asdfxyz}
xyz}
barxyz}'

unsetenv AAA
assert_fake_eval '  # ${parameter:=word}
    echo "${AAA:=foo}"
    echo "($AAA)"
    export AAA && printenv AAA
    AAA=
    echo "${AAA:=bar}"
    echo "($AAA)"
    printenv AAA

' 'foo
(foo)
foo
bar
(bar)
bar'

assert_fake_eval '  # ${parameter=word}
    echo "${AAA=foo}"
    echo "($AAA)"
    export AAA && printenv AAA
    AAA=
    printenv AAA
    echo "${AAA=bar}"
        printenv AAA
    echo "($AAA)"
' 'foo
(foo)
foo



()'

assert_fake_eval '  # ${parameter:?word}
    foo=asdf
    echo "${foo:?bar}"
    foo=
    echo "${foo:?bar}"
' 'asdf' 2> /dev/null
assert $? == 127
assert "$(fake_eval 'echo "${foo:?bar}"' 2>&1)" == 'bash: foo: bar'

assert_fake_eval '  # ${parameter:?word}
    echo "${foo:?bar}"
    echo hello
' '' 2> /dev/null
assert $? == 127
assert "$(fake_eval 'echo "${foo:?bar}"; echo hello' 2>&1)" == 'bash: foo: bar'

assert_fake_eval '  # ${parameter?word}
    foo=asdf
    echo "${foo?bar}xyz"
    foo=
    echo "${foo?bar}xyz"
    unset foo
    echo "${foo?bar}"
    echo false
' 'asdfxyz
xyz' 2> /dev/null
assert $? == 127
assert "$(fake_eval 'echo "${foo:?bar}"; echo hello' 2>&1)" == 'bash: foo: bar'

unsetenv foo
assert_fake_eval '  # ${parameter:+word}
    echo "(${foo:+hoge})"
    foo=
    echo "(${foo:+hoge})"
    echo "${foo:=123}"
    echo "${foo:+hoge}"
' '()
()
123
hoge'

assert_fake_eval '  # ${parameter+word}
    echo "(${foo+hoge})"
    echo "${foo=}"
    echo "(${foo+hoge})"
    foo=34
    echo "${foo+huga}"

' '()

(hoge)
huga'

assert_fake_eval '  # ${parameter/pattern/word}
    echo "<${aaaa//world}>"
    echo "<${aaaa/*/world}>"
    AAA=
    echo "<${AAA//12}>"
    echo "<${AAA/*/12}>"
    AAA=~/hoge
    echo "<${AAA/~/@@}>"
    AAA=123456
    echo "<${AAA/~ss/@@}>"
    echo "<${AAA/3*5/@@}>"
    echo "<${AAA/3*?/@@}>"
' '<>
<>
<>
<12>
<@@/hoge>
<123456>
<12@@6>
<12@@>'

assert_fake_eval '  # ${parameter//pattern/word}
    AAA="this is a pen"
    echo "<${AAA// /#}>"
    echo "<${AAA//i? /@}>"
    echo "<${AAA/bbb/@}>"
' '<this#is#a#pen>
<th@@a pen>
<this is a pen>'

assert_fake_eval '  # ${parameter/#pattern/word}
    AAA="that that that that"
    echo "<${AAA/#that/this}>"
    echo "<${AAA/#t?that/this}>"
    echo "<${AAA/#/@@}>"
    AAA=" # this "
    echo "<${AAA/# \#/@@}>"
' '<this that that that>
<that that that that>
<@@that that that that>
<@@ this >'

assert_fake_eval '  # ${parameter/%pattern/word}
    AAA="that that that that"
    echo "<${AAA/%that/this}>"
    AAA="%that %that"
    echo "<${AAA/%\%that/this}>"
' '<that that that this>
<%that this>'

assert_fake_eval '  # ${parameter#word}
    a=/var/log1/log2/message
    echo "${a#/}"
    echo "${a#*/}"
    echo "${a#log}"
    echo "${a#*log}"
' 'var/log1/log2/message
var/log1/log2/message
/var/log1/log2/message
1/log2/message'

assert_fake_eval '  # ${parameter##word}
    a=/var/log1/log2/message
    echo "${a##/}"
    echo "${a##*/}"
    echo "${a##log}"
    echo "${a##*log}"
' 'var/log1/log2/message
message
/var/log1/log2/message
2/message'


# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0