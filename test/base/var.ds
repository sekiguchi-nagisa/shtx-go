# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

# set
## undefined
assert_fake_eval 'ZZZZ=AAAA; printenv ZZZZ' ''
assert $? == 1

assert_fake_eval 'HOME=AAAA HOME2=BBBB; printenv HOME2' ''
assert $? == 1

## env
assert_fake_eval 'HOME=AAAA HOME2=BBBB; printenv HOME' 'AAAA'
assert $? == 0

assert "$({ 
    fake_eval "HOME=AAA; printenv HOME"; 
    assert $? == 0
    $HOME == "AAA"
 })" == "AAA"

# get
assert_fake_eval 'echo "($AAA)"' '()'
assert $? == 0

assert_fake_eval 'AAA=34; echo "($AAA)"' '(34)'
assert $? == 0

## env
assert_fake_eval 'echo "($HOME)"' "(${HOME})"
assert $? == 0

assert_fake_eval 'echo "($HOME)"; HOME=; printenv HOME' "(${HOME})"
assert $? == 0

# export
assert_fake_eval 'export ABCDE="$(echo hello)"; printenv ABCDE' 'hello'
assert $? == 0

assert_fake_eval 'e\xport AA=11 BB=22 CC=33; printenv AA; printenv BB; printenv CC' $'11\n22\n33'
assert $? == 0

unsetenv ZZZ
assert_fake_eval 'ZZZ=12345; export ZZZ; echo "($ZZZ)"; printenv ZZZ' $'(12345)\n12345'
assert $? == 0

# unset
assert_fake_eval \
    'export AAA=@@@; printenv AAA; echo "%${AAA}"; unset AAA; echo "${AAA-undefined}"; printenv AAA' \
    $'@@@\n%@@@\nundefined'
assert $? == 1

assert_fake_eval \
    'AAA=12; export BBB=@@; printenv AAA; printenv BBB; unset AAA BBB; echo "%${AAA-undefined}${BBB-undefined}%"' \
    $'@@\n%undefinedundefined%'
assert $? == 0

# special variable
assert_fake_eval 'echo "status: $?"; false; echo "status: $?"' $'status: 0\nstatus: 1'
assert $? == 0

assert_fake_eval 'echo status: $?; false; echo "status: $?"' $'status: 0\nstatus: 1'
assert $? == 0


# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0