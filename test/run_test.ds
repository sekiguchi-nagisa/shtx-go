#!/usr/bin/env arsh

_usage() : Nothing {
    echo 1>&2 $@
    echo 1>&2 usage: $SCRIPT_NAME -b litecheck test_dir
    exit 2
}

[<CLI(toplevel:$true, verbose: $true)>]
type _Param() {
    [<Option(short: 'b', help: 'litecheck path', required: $true)>]
    var litecheck = ""

    [<Arg(help: "test case directory", required: $true)>]
    var target_dir = ""
}

_main(p: _Param) {
    assert (test -f ${p.litecheck}) : "require litecheck"
    assert (test -d ${p.target_dir}) : "require test directory"

    # run each test script
    shctl set nullglob
    var targets : [String]
    for target in @(${p.target_dir}/*) {
        test -d $target && continue
        $targets.add($target)
    }

    $targets.empty() && {
        echo no test cases are found in ${p.target_dir}
        return 125
    }

    if (checkenv SHTX_DEV_MODE) {
        echo found ${$targets.size()} test cases in ${p.target_dir} with SHTX_DEV_MODE=on
    } else {
        echo found ${$targets.size()} test cases in ${p.target_dir} 
    }
    var failed : [String]
    for target in $targets {
        var r = call $BIN_NAME ${p.litecheck} -b $BIN_NAME $target
        echo ${$r ? "[OK]" : "[NG]"} $target
        if !$r {
            $failed.add($target)
        }
    }

    if !$failed.empty() {
        echo
        echo the following test cases failed
        for target in $failed {
            echo "   " $target
        }
    }
    return $failed.empty() ? 0 : 1
}

shctl is-sourced || _main $@
