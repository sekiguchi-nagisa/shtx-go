# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

## array assign
assert_fake_eval '
AAA=()
BBB=(123)
declare -p AAA BBB

BBB=(ABC \"123\")
declare -p BBB

AAA=@@@
BBB=12345   # assign to first element of array
echo ===
declare -p AAA BBB

CCC=ssss
CCC=(fr)  # overwrite
declare -p CCC

' 'declare -a AAA=()
declare -a BBB=([0]="123")
declare -a BBB=([0]="ABC" [1]="\"123\"")
===
declare -a AAA=([0]="@@@")
declare -a BBB=([0]="12345" [1]="\"123\"")
declare -a CCC=([0]="fr")'

## array expand
assert_fake_eval '
AAA=()
printf "<%s>\n" "${AAA[@]}"
AAA=(123 456 789)
printf "[%s]\n" "@@${AAA[@]}**"
BBB=erty
printf "{%s}\n" "${BBB[@]}"
printf "(%s)\n" "${CCCCCCCCCC[@]}"
' '<>
[@@123]
[456]
[789**]
{erty}
()'

## array op
assert_fake_eval '
## non-empty array
AAA=(1 2 3)
printf "<%s>\n" "${AAA[0]}"
printf "<%s>\n" "${AAA[1]}"
printf "<%s>\n" "${AAA[2]}"
printf "<%s>\n" "${AAA[3]}"
printf "<%s>\n" "${AAA[4]}"
# printf "<%s>\n" "${AAA[-1]}"
# printf "<%s>\n" "${AAA[-2]}"
# printf "<%s>\n" "${AAA[-3]}"

## empty array
BBB=()
printf "[%s]\n" "${BBB[0]}"
printf "[%s]\n" "${BBB[1]}"

## not array (string)
CCC=abcd
printf "(%s)\n" "${CCC[0]}"
printf "(%s)\n" "${CCC[1]}"
printf "(%s)\n" "${CCC[2]}"

' '<1>
<2>
<3>
<>
<>
<3>
[]
[]
(abcd)
()
()'


# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0