# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

## array assign
assert_fake_eval '
AAA=()
BBB=(123)
declare -p AAA BBB

BBB=(ABC \"123\")
declare -p BBB

AAA=@@@
BBB=12345   # assign to first element of array
echo ===
declare -p AAA BBB

CCC=ssss
CCC=(fr)  # overwrite
declare -p CCC

' 'declare -a AAA=()
declare -a BBB=([0]="123")
declare -a BBB=([0]="ABC" [1]="\"123\"")
===
declare -a AAA=([0]="@@@")
declare -a BBB=([0]="12345" [1]="\"123\"")
declare -a CCC=([0]="fr")'

## array assign (sparse array)
assert_fake_eval '
AAA=([2]=222 333 [6]=666 777 [0]=000 [4]=444)
declare -p AAA
' 'declare -a AAA=([0]="000" [2]="222" [3]="333" [4]="444" [6]="666" [7]="777")'

## array expand
assert_fake_eval '
AAA=()
printf "<%s>\n" "${AAA[@]}"
AAA=(123 456 789)
printf "[%s]\n" "@@${AAA[@]}**"
BBB=erty
printf "{%s}\n" "${BBB[@]}"
printf "(%s)\n" "${CCCCCCCCCC[@]}"
' '<>
[@@123]
[456]
[789**]
{erty}
()'

## array expand (sparse array)
assert_fake_eval '
AAA=()
echo "<${AAA[1]:=aaa}>"
echo "<${AAA[4]:=bbb}>"
echo "<${AAA[6]:=""}>"

printf "[%s]\n" "${AAA[@]}"
printf "(%s)\n" "11${AAA[@]}99"
' '<aaa>
<bbb>
<>
[aaa]
[bbb]
[]
(11aaa)
(bbb)
(99)'

# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0