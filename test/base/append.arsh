# RUN: call $cmd $self

source ../../shtx
source ../common/assert.ds

## string += string
assert_fake_eval '
AAA=; declare -p AAA;
AAA+=111; declare -p AAA;
' 'declare -- AAA=""
declare -- AAA="111"'

assert_fake_eval '
AAA=222; declare -p AAA;
AAA+=; declare -p AAA;
' 'declare -- AAA="222"
declare -- AAA="222"'

## string += array
assert_fake_eval '
AAA=; declare -p AAA;
AAA+=(); declare -p AAA;
' 'declare -- AAA=""
declare -a AAA=([0]="")'

assert_fake_eval '
AAA=; declare -p AAA;
AAA+=(111 222); declare -p AAA;
' 'declare -- AAA=""
declare -a AAA=([0]="" [1]="111" [2]="222")'

assert_fake_eval '
AAA=aaa; declare -p AAA;
AAA+=(111 222); declare -p AAA;
' 'declare -- AAA="aaa"
declare -a AAA=([0]="aaa" [1]="111" [2]="222")'

assert_fake_eval '
AAA=aaa; declare -p AAA;
AAA+=(); declare -p AAA;
' 'declare -- AAA="aaa"
declare -a AAA=([0]="aaa")'

## string += sparse array
assert_fake_eval '
AAA=; declare -p AAA;
AAA+=([0]=000 [2]=222); declare -p AAA
' 'declare -- AAA=""
declare -a AAA=([0]="000" [2]="222")'

assert_fake_eval '
AAA=aaa; declare -p AAA;
AAA+=([0]=000 [2]=222); declare -p AAA
' 'declare -- AAA="aaa"
declare -a AAA=([0]="000" [2]="222")'

assert_fake_eval '
AAA=aaa; declare -p AAA;
AAA+=([1]=000 [2]=222); declare -p AAA
' 'declare -- AAA="aaa"
declare -a AAA=([0]="aaa" [1]="000" [2]="222")'

## array += string
assert_fake_eval '
AAA=(); declare -p AAA;
AAA+=aaa; declare -p AAA
' 'declare -a AAA=()
declare -a AAA=([0]="aaa")'

assert_fake_eval '
AAA=(111 222); declare -p AAA;
AAA+=aaa; declare -p AAA
' 'declare -a AAA=([0]="111" [1]="222")
declare -a AAA=([0]="111aaa" [1]="222")'

assert_fake_eval '
AAA=(111 222); declare -p AAA;
AAA+=; declare -p AAA
' 'declare -a AAA=([0]="111" [1]="222")
declare -a AAA=([0]="111" [1]="222")'

## array += array
assert_fake_eval '
AAA=(); declare -p AAA;
AAA+=(111 222); declare -p AAA
' 'declare -a AAA=()
declare -a AAA=([0]="111" [1]="222")'

assert_fake_eval '
AAA=(aaa bbb); declare -p AAA;
AAA+=(111 222); declare -p AAA
' 'declare -a AAA=([0]="aaa" [1]="bbb")
declare -a AAA=([0]="aaa" [1]="bbb" [2]="111" [3]="222")'

assert_fake_eval '
AAA=(aaa bbb); declare -p AAA;
AAA+=(); declare -p AAA
' 'declare -a AAA=([0]="aaa" [1]="bbb")
declare -a AAA=([0]="aaa" [1]="bbb")'

## array += sparse array
assert_fake_eval '
AAA=(); declare -p AAA;
AAA+=([0]=00 [3]=33); declare -p AAA
' 'declare -a AAA=()
declare -a AAA=([0]="00" [3]="33")'

assert_fake_eval '
AAA=(aaa bbb); declare -p AAA;
AAA+=([0]=00 [3]=33); declare -p AAA
' 'declare -a AAA=([0]="aaa" [1]="bbb")
declare -a AAA=([0]="00" [1]="bbb" [3]="33")'

assert_fake_eval '
AAA=(aaa bbb); declare -p AAA;
AAA+=([3]=33); declare -p AAA
' 'declare -a AAA=([0]="aaa" [1]="bbb")
declare -a AAA=([0]="aaa" [1]="bbb" [3]="33")'

## sparse array += string
assert_fake_eval '
AAA=([0]=000 [4]=444); declare -p AAA;
AAA+=; declare -p AAA
' 'declare -a AAA=([0]="000" [4]="444")
declare -a AAA=([0]="000" [4]="444")'

assert_fake_eval '
AAA=([0]=000 [4]=444); declare -p AAA;
AAA+=aaaa; declare -p AAA
' 'declare -a AAA=([0]="000" [4]="444")
declare -a AAA=([0]="000aaaa" [4]="444")'

assert_fake_eval '
AAA=([5]=000 [3]=444); declare -p AAA;
AAA+=aaaa; declare -p AAA
' 'declare -a AAA=([3]="444" [5]="000")
declare -a AAA=([0]="aaaa" [3]="444" [5]="000")'

## sparse array += array
assert_fake_eval '
AAA=([5]=000 [3]=444); declare -p AAA;
AAA+=(); declare -p AAA
' 'declare -a AAA=([3]="444" [5]="000")
declare -a AAA=([3]="444" [5]="000")'

assert_fake_eval '
AAA=([5]=000 [3]=444); declare -p AAA;
AAA+=(aaa bbb); declare -p AAA
' 'declare -a AAA=([3]="444" [5]="000")
declare -a AAA=([3]="444" [5]="000" [6]="aaa" [7]="bbb")'

assert_fake_eval '
AAA=([10]=000); declare -p AAA;
AAA+=(aaa bbb); declare -p AAA
' 'declare -a AAA=([10]="000")
declare -a AAA=([10]="000" [11]="aaa" [12]="bbb")'

## sparse array += sparse array
assert_fake_eval '
AAA=([10]=000 [1]=111); declare -p AAA;
AAA+=([2]=aaa [10]=bbb [34]=ccc); declare -p AAA
' 'declare -a AAA=([1]="111" [10]="000")
declare -a AAA=([1]="111" [2]="aaa" [10]="bbb" [34]="ccc")'

# CHECK_RE: ^$
# CHECKERR_RE: ^$
# STATUS: 0